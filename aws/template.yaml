AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
    webhook-proxy

    Sample SAM Template for webhook-proxy

Globals:
    Function:
        Timeout: 3

Parameters:
    TableName:
        Type: String
        Default: 'webhook_proxy_connections'
        Description: (Required) The name of the new DynamoDB to store connection identifiers for each connected clients. Minimum 3 characters
        MinLength: 3
        MaxLength: 50
        AllowedPattern: ^[A-Za-z_]+$
        ConstraintDescription: 'Required. Can be characters and underscore only. No numbers or special characters allowed.'


Resources:
    SharedPythonLayer:
        Type: AWS::Serverless::LayerVersion
        Properties:
            LayerName: !Sub 'SharedPythonLayer-${AWS::StackName}'
            Description: Python code shared across functions
            ContentUri: python/shared/
            CompatibleRuntimes:
                - python3.6
            RetentionPolicy: Retain

    SubscribeFunction:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: python/subscribe/
            Handler: app.lambda_handler
            Layers:
            - !Ref SharedPythonLayer
            Runtime: python3.6
            Environment:
                Variables:
                    TABLE_NAME: !Ref TableName
            Policies:
            -   DynamoDBCrudPolicy:
                    TableName: !Ref TableName
            


    OnDisconnectFunction:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: python/on_disconnect/
            Handler: app.lambda_handler
            Layers:
            - !Ref SharedPythonLayer
            Runtime: python3.6
            Environment:
                Variables:
                    TABLE_NAME: !Ref TableName
            Policies:
            -   DynamoDBCrudPolicy:
                    TableName: !Ref TableName


    ReceiveWebhookFunction:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: python/receive_webhook/
            Handler: app.lambda_handler
            Layers:
            - !Ref SharedPythonLayer
            Runtime: python3.6
            Environment:
                Variables:
                    TABLE_NAME: !Ref TableName
            Policies:
            -   DynamoDBCrudPolicy:
                    TableName: !Ref TableName
            -   Statement:
                # This is only required because the above DynamoDBCrudPolicy doesn't currently include access to the DynamoDB global secondary indexes (GSI). 
                # See https://github.com/awslabs/serverless-application-model/issues/280
                -   Effect: Allow
                    Action:
                    - "dynamodb:GetItem"
                    - "dynamodb:DeleteItem"
                    - "dynamodb:PutItem"
                    - "dynamodb:Scan"
                    - "dynamodb:Query"
                    - "dynamodb:UpdateItem"
                    - "dynamodb:BatchWriteItem"
                    - "dynamodb:BatchGetItem"
                    - "dynamodb:DescribeTable"
                    Resource:
                    - !Sub "arn:aws:dynamodb:*:*:table/${TableName}/index/*"
            -   Statement:
                -   Effect: Allow
                    Action:
                    - 'execute-api:ManageConnections'
                    Resource:
                    - 'arn:aws:execute-api:*:*:*/@connections/*'
            Events:
                WebhookAPI:
                    Type: Api
                    Properties:
                        Path: "/webhook/{webhookId}"
                        Method: POST

    ConnectionsTable:
        Type: AWS::DynamoDB::Table
        Properties:
            AttributeDefinitions:
                -   AttributeName: "connectionId"
                    AttributeType: "S"
                -   AttributeName: "subscriptionId"
                    AttributeType: "S"
            KeySchema:
                -   AttributeName: "connectionId"
                    KeyType: "HASH"
            GlobalSecondaryIndexes:
                -   IndexName: subscriptionId-index
                    KeySchema:
                        -   AttributeName: "subscriptionId"
                            KeyType: HASH
                    Projection:
                        ProjectionType: ALL
            BillingMode: PAY_PER_REQUEST
            SSESpecification:
                SSEEnabled: True
            TableName: !Sub '${TableName}-${AWS::StackName}'

            

Outputs:
    OnDisconnectFunction:
        Description: "Disconnect Lambda Function ARN"
        Value: !GetAtt OnDisconnectFunction.Arn
    SubscribeFunction:
        Description: "Subscribe Lambda Function ARN"
        Value: !GetAtt SubscribeFunction.Arn